(begin

  (bench "constraints - attribution" 1000
         ;; Move large numbers of constraints on the same variable as a block
         (run -1 (x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99 x100)
           (=/= x1 1) (=/= x1 2) (=/= x1 3) (=/= x1 4) (=/= x1 5) (=/= x1 6) (=/= x1 7) (=/= x1 8) (=/= x1 9) (=/= x1 10) (=/= x1 11) (=/= x1 12) (=/= x1 13) (=/= x1 14) (=/= x1 15) (=/= x1 16) (=/= x1 17) (=/= x1 18) (=/= x1 19) (=/= x1 20) (=/= x1 21) (=/= x1 22) (=/= x1 23) (=/= x1 24) (=/= x1 25) (=/= x1 26) (=/= x1 27) (=/= x1 28) (=/= x1 29) (=/= x1 30) (=/= x1 31) (=/= x1 32) (=/= x1 33) (=/= x1 34) (=/= x1 35) (=/= x1 36) (=/= x1 37) (=/= x1 38) (=/= x1 39) (=/= x1 40) (=/= x1 41) (=/= x1 42) (=/= x1 43) (=/= x1 44) (=/= x1 45) (=/= x1 46) (=/= x1 47) (=/= x1 48) (=/= x1 49) (=/= x1 50) (=/= x1 51) (=/= x1 52) (=/= x1 53) (=/= x1 54) (=/= x1 55) (=/= x1 56) (=/= x1 57) (=/= x1 58) (=/= x1 59) (=/= x1 60) (=/= x1 61) (=/= x1 62) (=/= x1 63) (=/= x1 64) (=/= x1 65) (=/= x1 66) (=/= x1 67) (=/= x1 68) (=/= x1 69) (=/= x1 70) (=/= x1 71) (=/= x1 72) (=/= x1 73) (=/= x1 74) (=/= x1 75) (=/= x1 76) (=/= x1 77) (=/= x1 78) (=/= x1 79) (=/= x1 80) (=/= x1 81) (=/= x1 82) (=/= x1 83) (=/= x1 84) (=/= x1 85) (=/= x1 86) (=/= x1 87) (=/= x1 88) (=/= x1 89) (=/= x1 90) (=/= x1 91) (=/= x1 92) (=/= x1 93) (=/= x1 94) (=/= x1 95) (=/= x1 96) (=/= x1 97) (=/= x1 98) (=/= x1 99)
           
           (== x1 x2) (== x3 x4) (== x5 x6) (== x7 x8) (== x9 x10) (== x11 x12) (== x13 x14) (== x15 x16) (== x17 x18) (== x19 x20) (== x21 x22) (== x23 x24) (== x25 x26) (== x27 x28) (== x29 x30) (== x31 x32) (== x33 x34) (== x35 x36) (== x37 x38) (== x39 x40) (== x41 x42) (== x43 x44) (== x45 x46) (== x47 x48) (== x49 x50) (== x51 x52) (== x53 x54) (== x55 x56) (== x57 x58) (== x59 x60) (== x61 x62) (== x63 x64) (== x65 x66) (== x67 x68) (== x69 x70) (== x71 x72) (== x73 x74) (== x75 x76) (== x77 x78) (== x79 x80) (== x81 x82) (== x83 x84) (== x85 x86) (== x87 x88) (== x89 x90) (== x91 x92) (== x93 x94) (== x95 x96) (== x97 x98) (== x99 x100)))
  
  (bench "absento - ground" 1000
         ;; Greedily consume ground terms without extending the substitution/store
         (run -1 (x)
           (absento 100 '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99))))

    (bench "absento - ground fail early" 5000
         ;; Tests if fully ground absento aborts before doing unnecessary work
         (run -1 (x)
           (absento 100 '(100 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99))))

  (bench "absento - bound" 100
         ;; Greedily consume ground terms without extending the substitution/store
         (run 1 (x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99)
           (absento 100 x1) (conde [(== x1 (cons 1 x2)) (== x2 (cons 2 x3)) (== x3 (cons 3 x4)) (== x4 (cons 4 x5)) (== x5 (cons 5 x6)) (== x6 (cons 6 x7)) (== x7 (cons 7 x8)) (== x8 (cons 8 x9)) (== x9 (cons 9 x10)) (== x10 (cons 10 x11)) (== x11 (cons 11 x12)) (== x12 (cons 12 x13)) (== x13 (cons 13 x14)) (== x14 (cons 14 x15)) (== x15 (cons 15 x16)) (== x16 (cons 16 x17)) (== x17 (cons 17 x18)) (== x18 (cons 18 x19)) (== x19 (cons 19 x20)) (== x20 (cons 20 x21)) (== x21 (cons 21 x22)) (== x22 (cons 22 x23)) (== x23 (cons 23 x24)) (== x24 (cons 24 x25)) (== x25 (cons 25 x26)) (== x26 (cons 26 x27)) (== x27 (cons 27 x28)) (== x28 (cons 28 x29)) (== x29 (cons 29 x30)) (== x30 (cons 30 x31)) (== x31 (cons 31 x32)) (== x32 (cons 32 x33)) (== x33 (cons 33 x34)) (== x34 (cons 34 x35)) (== x35 (cons 35 x36)) (== x36 (cons 36 x37)) (== x37 (cons 37 x38)) (== x38 (cons 38 x39)) (== x39 (cons 39 x40)) (== x40 (cons 40 x41)) (== x41 (cons 41 x42)) (== x42 (cons 42 x43)) (== x43 (cons 43 x44)) (== x44 (cons 44 x45)) (== x45 (cons 45 x46)) (== x46 (cons 46 x47)) (== x47 (cons 47 x48)) (== x48 (cons 48 x49)) (== x49 (cons 49 x50)) (== x50 (cons 50 x51)) (== x51 (cons 51 x52)) (== x52 (cons 52 x53)) (== x53 (cons 53 x54)) (== x54 (cons 54 x55)) (== x55 (cons 55 x56)) (== x56 (cons 56 x57)) (== x57 (cons 57 x58)) (== x58 (cons 58 x59)) (== x59 (cons 59 x60)) (== x60 (cons 60 x61)) (== x61 (cons 61 x62)) (== x62 (cons 62 x63)) (== x63 (cons 63 x64)) (== x64 (cons 64 x65)) (== x65 (cons 65 x66)) (== x66 (cons 66 x67)) (== x67 (cons 67 x68)) (== x68 (cons 68 x69)) (== x69 (cons 69 x70)) (== x70 (cons 70 x71)) (== x71 (cons 71 x72)) (== x72 (cons 72 x73)) (== x73 (cons 73 x74)) (== x74 (cons 74 x75)) (== x75 (cons 75 x76)) (== x76 (cons 76 x77)) (== x77 (cons 77 x78)) (== x78 (cons 78 x79)) (== x79 (cons 79 x80)) (== x80 (cons 80 x81)) (== x81 (cons 81 x82)) (== x82 (cons 82 x83)) (== x83 (cons 83 x84)) (== x84 (cons 84 x85)) (== x85 (cons 85 x86)) (== x86 (cons 86 x87)) (== x87 (cons 87 x88)) (== x88 (cons 88 x89)) (== x89 (cons 89 x90)) (== x90 (cons 90 x91)) (== x91 (cons 91 x92)) (== x92 (cons 92 x93)) (== x93 (cons 93 x94)) (== x94 (cons 94 x95)) (== x95 (cons 95 x96)) (== x96 (cons 96 x97)) (== x97 (cons 97 x98)) (== x98 (cons 98 x99)) (== x99 99)]
                                   [(== 2 1)])))

  (bench "absento - bound fail early" 5000
         ;; Tests if absento aborts before doing unnecessary work
         (run -1 (x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99)
           (absento 100 x1) (== x1 (cons 100 x2)) (== x2 (cons 2 x3)) (== x3 (cons 3 x4)) (== x4 (cons 4 x5)) (== x5 (cons 5 x6)) (== x6 (cons 6 x7)) (== x7 (cons 7 x8)) (== x8 (cons 8 x9)) (== x9 (cons 9 x10)) (== x10 (cons 10 x11)) (== x11 (cons 11 x12)) (== x12 (cons 12 x13)) (== x13 (cons 13 x14)) (== x14 (cons 14 x15)) (== x15 (cons 15 x16)) (== x16 (cons 16 x17)) (== x17 (cons 17 x18)) (== x18 (cons 18 x19)) (== x19 (cons 19 x20)) (== x20 (cons 20 x21)) (== x21 (cons 21 x22)) (== x22 (cons 22 x23)) (== x23 (cons 23 x24)) (== x24 (cons 24 x25)) (== x25 (cons 25 x26)) (== x26 (cons 26 x27)) (== x27 (cons 27 x28)) (== x28 (cons 28 x29)) (== x29 (cons 29 x30)) (== x30 (cons 30 x31)) (== x31 (cons 31 x32)) (== x32 (cons 32 x33)) (== x33 (cons 33 x34)) (== x34 (cons 34 x35)) (== x35 (cons 35 x36)) (== x36 (cons 36 x37)) (== x37 (cons 37 x38)) (== x38 (cons 38 x39)) (== x39 (cons 39 x40)) (== x40 (cons 40 x41)) (== x41 (cons 41 x42)) (== x42 (cons 42 x43)) (== x43 (cons 43 x44)) (== x44 (cons 44 x45)) (== x45 (cons 45 x46)) (== x46 (cons 46 x47)) (== x47 (cons 47 x48)) (== x48 (cons 48 x49)) (== x49 (cons 49 x50)) (== x50 (cons 50 x51)) (== x51 (cons 51 x52)) (== x52 (cons 52 x53)) (== x53 (cons 53 x54)) (== x54 (cons 54 x55)) (== x55 (cons 55 x56)) (== x56 (cons 56 x57)) (== x57 (cons 57 x58)) (== x58 (cons 58 x59)) (== x59 (cons 59 x60)) (== x60 (cons 60 x61)) (== x61 (cons 61 x62)) (== x62 (cons 62 x63)) (== x63 (cons 63 x64)) (== x64 (cons 64 x65)) (== x65 (cons 65 x66)) (== x66 (cons 66 x67)) (== x67 (cons 67 x68)) (== x68 (cons 68 x69)) (== x69 (cons 69 x70)) (== x70 (cons 70 x71)) (== x71 (cons 71 x72)) (== x72 (cons 72 x73)) (== x73 (cons 73 x74)) (== x74 (cons 74 x75)) (== x75 (cons 75 x76)) (== x76 (cons 76 x77)) (== x77 (cons 77 x78)) (== x78 (cons 78 x79)) (== x79 (cons 79 x80)) (== x80 (cons 80 x81)) (== x81 (cons 81 x82)) (== x82 (cons 82 x83)) (== x83 (cons 83 x84)) (== x84 (cons 84 x85)) (== x85 (cons 85 x86)) (== x86 (cons 86 x87)) (== x87 (cons 87 x88)) (== x88 (cons 88 x89)) (== x89 (cons 89 x90)) (== x90 (cons 90 x91)) (== x91 (cons 91 x92)) (== x92 (cons 92 x93)) (== x93 (cons 93 x94)) (== x94 (cons 94 x95)) (== x95 (cons 95 x96)) (== x96 (cons 96 x97)) (== x97 (cons 97 x98)) (== x98 (cons 98 x99)) (== x99 99)))

  (bench "absento - tree" 100
         ;; Tests that the solver can simplify absento into single variable constraints rather than entangling them in large disjunctions.
         (run -1 (x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99)
           (absento 100 x1) (== x1 (cons x2 x3)) (== x2 (cons x4 x5)) (== x3 (cons x6 x7)) (== x4 (cons x8 x9)) (== x5 (cons x10 x11)) (== x6 (cons x12 x13)) (== x7 (cons x14 x15)) (== x8 (cons x16 x17)) (== x9 (cons x18 x19)) (== x10 (cons x20 x21)) (== x11 (cons x22 x23)) (== x12 (cons x24 x25)) (== x13 (cons x26 x27)) (== x14 (cons x28 x29)) (== x15 (cons x30 x31)) (== x16 (cons x32 x33)) (== x17 (cons x34 x35)) (== x18 (cons x36 x37)) (== x19 (cons x38 x39)) (== x20 (cons x40 x41)) (== x21 (cons x42 x43)) (== x22 (cons x44 x45)) (== x23 (cons x46 x47)) (== x24 (cons x48 x49)) (== x25 (cons x50 x51)) (== x26 (cons x52 x53)) (== x27 (cons x54 x55)) (== x28 (cons x56 x57)) (== x29 (cons x58 x59)) (== x30 (cons x60 x61)) (== x31 (cons x62 x63)) (== x32 (cons x64 x65)) (== x33 (cons x66 x67)) (== x34 (cons x68 x69)) (== x35 (cons x70 x71)) (== x36 (cons x72 x73)) (== x37 (cons x74 x75)) (== x38 (cons x76 x77)) (== x39 (cons x78 x79)) (== x40 (cons x80 x81)) (== x41 (cons x82 x83)) (== x42 (cons x84 x85)) (== x43 (cons x86 x87)) (== x44 (cons x88 x89)) (== x45 (cons x90 x91)) (== x46 (cons x92 x93)) (== x47 (cons x94 x95)) (== x48 (cons x96 x97)) (== x49 (cons x98 x99))))

  (bench "absento - tree2" 1
         ;; Tests that the solver can simplify absento into single variable constraints rather than entangling them in large disjunctions.
         (run -1 (x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99)
           (absento 100 x1) (absento 101 x1) (== x1 (cons x2 x3)) (== x2 (cons x4 x5)) (== x3 (cons x6 x7)) (== x4 (cons x8 x9)) (== x5 (cons x10 x11)) (== x6 (cons x12 x13)) (== x7 (cons x14 x15)) (== x8 (cons x16 x17)))))
