(library (negation-tests)
  (export run-negation-tests)
  (import (chezscheme) (test-runner) (negation) (goals) (constraints) (ui) (datatypes))

  (define (run-negation-tests)
    (tassert "negate succeed" (noto succeed) fail)
    (tassert "negate fail" (noto fail) succeed)
    (tassert "negate unification" (noto (== 1 2)) (=/= 1 2))
    (tassert "negate disunification" (noto (=/= 1 2)) (== 1 2))
    (tassert "negate disjunction" (noto (conde [(=/= 1 2)] [succeed] [fail])) (fresh () (== 1 2) fail succeed))
    (tassert "negate conjunction" (noto (fresh () (== 1 2) fail succeed)) (conde [(=/= 1 2)] [succeed] [fail]))
    (tassert "negate fresh" (stale? (noto (fresh (q) succeed))) #t)
    (tassert "negate stale" (fresh? (noto (noto (fresh (q) succeed)))) #t)
    ;(tassert "run stale" (run1 (x0) (noto (fresh (x1) (=/= x0 x1)))) )
    ))
